name: build push env-data-api statics

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "Please provide a git tag value, e.g. v1.0.5b6. The build id should be added with prefix b and incremented by each build."
        required: true
        type: string
        default: "v1.0.5b6"
  push:
    tags:
      - "v*"

jobs:
  push_to_registry:
    name: build push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "build_date=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_OUTPUT

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildkit env
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for tagging Docker Image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: 52north/maridata-env-data-api-statics
          labels: |
            "org.opencontainers.image.url=https://github.com/52north/MariDataHarvest/"
            "org.opencontainers.image.source=https://github.com/52north//MariDataHarvest/"
            "org.opencontainers.image.licenses=Apache2.0"
            "org.opencontainers.image.title=Environmental Data API - Static Files"
            "org.opencontainers.image.description=Python Flask based web API to download environmental data in a datacube (aka NetCDF file) - this image contains the required static files"
          tags: |
            type=match,pattern=v(.*),group=1,value=${{ github.event.inputs.tags }}

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.web.k8s
          cache-from: type=gha
          cache-to: type=gha
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_COMMIT=${{ github.sha }}
            BUILD_DATE=${{ steps.vars.outputs.build_date }}
            VERSION=${{ github.event.inputs.tags }}
